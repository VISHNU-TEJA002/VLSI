// Module: RotatorUnit
// Description: Loads an 8-bit value and can rotate it left or right
// on each clock cycle based on a direction signal.

module RotatorUnit (
    input  wire       clk,
    input  wire       reset,
    input  wire       load,      // Signal to load new data
    input  wire       direction, // 0 for left, 1 for right
    input  wire [7:0] data_in,
    output wire [7:0] data_out
);

    reg [7:0] internal_reg;

    always @(posedge clk or posedge reset) begin
        if (reset) begin
            internal_reg <= 8'b0;
        end else if (load) begin
            internal_reg <= data_in;
        end else begin
            if (direction == 1'b0) begin // Rotate Left
                internal_reg <= {internal_reg[6:0], internal_reg[7]};
            end else begin // Rotate Right
                internal_reg <= {internal_reg[0], internal_reg[7:1]};
            end
        end
    end
    
    // Output the value of the internal register
    assign data_out = internal_reg;

endmodule
